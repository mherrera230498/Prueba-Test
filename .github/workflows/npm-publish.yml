name: Node.js Package

on:
  #release:
  #  types: [created]
  push:
    branches: [ main ]  
  #pull_request:
  #  branches: [ main ]
  
env:
  NODE_VERSION: 18
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  #build-and-test:
  #  if: always()
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v3
  #    - uses: actions/setup-node@v3
  #      with:
  #        node-version: ${{ env.NODE_VERSION }}
  #    - run: npm ci
  #    - run: npm run build --if-present
  #    - run: npx jest --coverage
  #    
  #eslint:
  #  if: always()
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v3
  #    - uses: actions/setup-node@v3
  #      with:
  #        node-version: ${{ env.NODE_VERSION }}
  #    - run: npm ci
  #    - run: npx eslint .
  #    
  #snyk:
  #  if: always()
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@master
  #    - uses: snyk/actions/node@master
  #      env:
  #        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #      with:
  #        args: --severity-threshold=high --all-projects
          
  docker-build:
    if: always()
    #needs: [build-and-test, eslint, snyk]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |            
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=schedule

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
